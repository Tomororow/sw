<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zyjz.watersupply.dao.WaterTreeStructureMapper" >
  <resultMap id="BaseResultMap" type="com.zyjz.watersupply.entity.WaterTreeStructure" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="label" property="label" jdbcType="VARCHAR" />
    <result column="tree_code" property="treeCode" jdbcType="VARCHAR" />
    <result column="tree_level" property="treeLevel" jdbcType="DOUBLE" />
    <result column="parent_level_id" property="parentLevelId" jdbcType="VARCHAR" />
    <result column="creation_time" property="creationTime" jdbcType="TIMESTAMP" />
    <result column="updation_time" property="updationTime" jdbcType="TIMESTAMP" />
    <result column="tree_remark" property="treeRemark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, label, tree_code, tree_level, parent_level_id, creation_time, updation_time, 
    tree_remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from water_tree_structure
    where id = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap" >
  	 select 
    <include refid="Base_Column_List" />
    from water_tree_structure
  </select>
<!--   根据树编码查询 -->
<select id="selectCode" resultMap="BaseResultMap" parameterType="com.zyjz.watersupply.entity.WaterTreeStructure">
	select
	<include refid="Base_Column_List" />
	from water_tree_structure
	where tree_code = #{tree_code,jdbcType=VARCHAR}
</select>
<!-- 查询级别最小的id -->
<select id="selectMin" resultMap="BaseResultMap"> 
	select id from water_tree_structure where tree_level=(select min(tree_level) FROM water_tree_structure)
</select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from water_tree_structure
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.zyjz.watersupply.entity.WaterTreeStructure" >
    insert into water_tree_structure (id, label, tree_code, 
      tree_level, parent_level_id, creation_time, 
      updation_time, tree_remark)
    values (#{id,jdbcType=VARCHAR}, #{label,jdbcType=VARCHAR}, #{treeCode,jdbcType=VARCHAR}, 
      #{treeLevel,jdbcType=DOUBLE}, #{parentLevelId,jdbcType=VARCHAR}, #{creationTime,jdbcType=TIMESTAMP}, 
      #{updationTime,jdbcType=TIMESTAMP}, #{treeRemark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zyjz.watersupply.entity.WaterTreeStructure" >
  <selectKey keyColumn="id" keyProperty="id" order="BEFORE" resultType="java.lang.String">
  		
  		SELECT UUID()
  	</selectKey>
    insert into water_tree_structure
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="label != null" >
        label,
      </if>
      <if test="treeCode != null" >
        tree_code,
      </if>
      <if test="treeLevel != null" >
        tree_level,
      </if>
      <if test="parentLevelId != null" >
        parent_level_id,
      </if>
      <if test="creationTime != null" >
        creation_time,
      </if>
      <if test="updationTime != null" >
        updation_time,
      </if>
      <if test="treeRemark != null" >
        tree_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="label != null" >
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="treeCode != null" >
        #{treeCode,jdbcType=VARCHAR},
      </if>
      <if test="treeLevel != null" >
        #{treeLevel,jdbcType=DOUBLE},
      </if>
      <if test="parentLevelId != null" >
        #{parentLevelId,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updationTime != null" >
        #{updationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="treeRemark != null" >
        #{treeRemark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update water_tree_structure
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.label != null" >
        label = #{record.label,jdbcType=VARCHAR},
      </if>
      <if test="record.treeCode != null" >
        tree_code = #{record.treeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.treeLevel != null" >
        tree_level = #{record.treeLevel,jdbcType=DOUBLE},
      </if>
      <if test="record.parentLevelId != null" >
        parent_level_id = #{record.parentLevelId,jdbcType=VARCHAR},
      </if>
      <if test="record.creationTime != null" >
        creation_time = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updationTime != null" >
        updation_time = #{record.updationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.treeRemark != null" >
        tree_remark = #{record.treeRemark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update water_tree_structure
    set id = #{record.id,jdbcType=VARCHAR},
      label = #{record.label,jdbcType=VARCHAR},
      tree_code = #{record.treeCode,jdbcType=VARCHAR},
      tree_level = #{record.treeLevel,jdbcType=DOUBLE},
      parent_level_id = #{record.parentLevelId,jdbcType=VARCHAR},
      creation_time = #{record.creationTime,jdbcType=TIMESTAMP},
      updation_time = #{record.updationTime,jdbcType=TIMESTAMP},
      tree_remark = #{record.treeRemark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyjz.watersupply.entity.WaterTreeStructure" >
    update water_tree_structure
    <set >
      <if test="label != null" >
        label = #{label,jdbcType=VARCHAR},
      </if>
      <if test="treeCode != null" >
        tree_code = #{treeCode,jdbcType=VARCHAR},
      </if>
      <if test="treeLevel != null" >
        tree_level = #{treeLevel,jdbcType=DOUBLE},
      </if>
      <if test="parentLevelId != null" >
        parent_level_id = #{parentLevelId,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null" >
        creation_time = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updationTime != null" >
        updation_time = #{updationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="treeRemark != null" >
        tree_remark = #{treeRemark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zyjz.watersupply.entity.WaterTreeStructure" >
    update water_tree_structure
    set label = #{label,jdbcType=VARCHAR},
      tree_code = #{treeCode,jdbcType=VARCHAR},
      tree_level = #{treeLevel,jdbcType=DOUBLE},
      parent_level_id = #{parentLevelId,jdbcType=VARCHAR},
      creation_time = #{creationTime,jdbcType=TIMESTAMP},
      updation_time = #{updationTime,jdbcType=TIMESTAMP},
      tree_remark = #{treeRemark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>